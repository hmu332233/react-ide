'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _jquery = require('jquery');

var _jquery2 = _interopRequireDefault(_jquery);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactDom = require('react-dom');

var _reactDom2 = _interopRequireDefault(_reactDom);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Sortable = function (_React$Component) {
  _inherits(Sortable, _React$Component);

  function Sortable() {
    _classCallCheck(this, Sortable);

    return _possibleConstructorReturn(this, (Sortable.__proto__ || Object.getPrototypeOf(Sortable)).apply(this, arguments));
  }

  _createClass(Sortable, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      var _this2 = this;

      var _props = this.props,
          forcePlaceholderSize = _props.forcePlaceholderSize,
          handle = _props.handle,
          placeholder = _props.placeholder;


      var node = _reactDom2.default.findDOMNode(this);
      (0, _jquery2.default)(node).sortable({
        stop: function stop() {
          var order = (0, _jquery2.default)(node).sortable('toArray');
          (0, _jquery2.default)(node).sortable('cancel');
          _this2.props.onChange(order);
        },
        forcePlaceholderSize: forcePlaceholderSize,
        handle: handle,
        placeholder: placeholder
      });
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      var node = _reactDom2.default.findDOMNode(this);
      (0, _jquery2.default)(node).sortable('destroy');
    }
  }, {
    key: 'render',
    value: function render() {
      var children = this.props.children;


      return children;
    }
  }]);

  return Sortable;
}(_react2.default.Component);

Sortable.propTypes = {
  children: _react2.default.PropTypes.node,
  forcePlaceholderSize: _react2.default.PropTypes.bool,
  handle: _react2.default.PropTypes.string,
  onChange: _react2.default.PropTypes.func,
  placeholder: _react2.default.PropTypes.string
};
exports.default = Sortable;